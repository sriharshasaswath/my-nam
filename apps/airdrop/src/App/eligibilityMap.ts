// Lists of repos that are eligible for the NAM airdrop.
// NOTE: Case insensitive, call .toLowerCase() on the repo name before checking.
export const interchain = new Set([
  "agoric/agoric-sdk",
  "althea-net/althea-l1",
  "anoma/namada-testnets",
  "celestiaorg/celestia-app",
  "celestiaorg/celestia-core",
  "celestiaorg/celestia-node",
  "chainapsis/keplr-wallet",
  "confio/ts-relayer",
  "cosmology-tech/cosmos-kit",
  "cosmos/chain-registry/",
  "cosmos/cosmjs",
  "cosmos/cosmos-rust",
  "cosmos/cosmos-sdk",
  "cosmos/gaia",
  "cosmos/ibc",
  "cosmos/ibc-apps",
  "cosmos/ibc-go",
  "cosmos/ibc-rs",
  "cosmos/ics23",
  "cosmos/relayer",
  "cosmos/sdk-tutorials",
  "cosmos/testnets",
  "cosmostation/chainlist",
  "cosmostation/cosmostation-android",
  "cosmostation/cosmostation-ios",
  "cosmwasm/cosmwasm",
  "da0-da0/dao-contracts",
  "dydxprotocol/v4-chain",
  "eco-stake/restake",
  "evmos/ethermint",
  "fetchai/cosmpy",
  "gravity-bridge/gravity-bridge",
  "ignite/cli",
  "informalsystems/apalache",
  "informalsystems/cometbft",
  "informalsystems/hermes",
  "informalsystems/multisig",
  "informalsystems/tendermint-rs",
  "interchainio/ibc-go",
  "mars-protocol/v1-core",
  "nomic-io/nomic",
  "nymtech/nym",
  "octopus-network/substrate-ibc",
  "osmosis-labs/osmosis",
  "osmosis-labs/osmosis-frontend",
  "penumbra-zone/penumbra",
  "penumbra-zone/tower-abci",
  "public-awesome/launchpad",
  "public-awesome/stargaze",
  "regennetwork/regen-ledger",
  "skip-mev/skip-api-contracts",
  "skip-mev/skip-router-sdk",
  "strangelove-ventures/horcrux",
  "strangelove-ventures/interchaintest",
  "strangelove-ventures/noble",
  "stride-labs/stride",
  "iqlusioninc/tmkms",
  "idena-network/idena-go",
  "irisnet/irishub",
  "cosmoscontracts/juno",
  "hashcloak/katzenmint-pki",
  "kava-labs/kava",
  "oasisprotocol/oasis-core",
  "scrtlabs/secretnetwork",
  "sentinel-official/hub",
  "umee-network/umee",
  "cosmos/awesome-cosmos",
  "cosmos/iavl",
  "iqlusioninc/crates",
  "mapofzones/map-of-zones-web",
  "turbofish-org/orga",
  "informalsystems/multisig",
  "mars-protocol/contracts",
  "celestiaorg/rsmt2d",
  "crescent-network/crescent",
  "babylonchain/babylon",
  "leapwallet/cosmos-extension",
  "axelarnetwork/axelar-core",
  "anish-agnihotri/quadratic-funding",
  "gitcoinco/quadratic-funding",
  "gitcoinco/grants-stack",
  "gitcoinco/passport",
  "ethereum-optimism/optimism",
  "retrox-pgf/retrox",
  "allo-protocol/allo-v2",
  "coordinape/coordinape",
  "coordinape/coordinape-protocol",
]);

export const zkp = new Set([
  "matter-labs/awesome-zero-knowledge-proofs",
  "minaprotocol/mina",
  "consensys/gnark",
  "darkrenaissance/darkfi",
  "zkcrypto/bellman",
  "semaphore-protocol/semaphore",
  "zkonduit/ezkl",
  "sdiehl/bulletproofs",
  "o1-labs/o1js",
  "lurk-lab/lurk-rs",
  "stealthdrop/stealthdrop",
  "leastauthority/moonmath-manual",
  "a16z/lasso",
  "paulmillr/noble-curves",
  "privacy-scaling-explorations/chiquito",
  "privacy-scaling-explorations/halo2curves",
  "privacy-scaling-explorations/folding-schemes",
  "privacy-scaling-explorations/snark-verifier",
  "privacy-scaling-explorations/mpz",
  "zkcrypto/pairing",
  "zkcrypto/bls12_381",
  "zkcrypto/ff",
  "zkcrypto/jubjub",
  "zkcrypto/group",
  "zkcrypto/curve25519-dalek-ng",
  "zkcrypto/subtle-ng",
  "zkcrypto/groth16",
  "zkcrypto/merlin",
  "dalek-cryptography/ed25519-dalek",
  "dalek-cryptography/subtle",
  "dalek-cryptography/x25519-dalek",
  "dalek-cryptography/zkp",
  "ebfull/powersoftau",
  "supranational/sppark",
  "supranational/blst",
  "0xparc/zk-bug-tracker",
  "0xparc/plonkathon",
  "0xparc/zkrepl",
  "0xpolygonzero/plonky2",
  "0xpolygonzero/r1cs",
  "0xpolygonzero/r1cs-workshop",
  "plume-sig/zk-nullifier-sig",
  "snario/zknifty",
  "zkcollective/zk-harness",
  "sdiehl/arithmetic-circuits",
  "nilfoundation/zkllvm-blueprint",
  "espressosystems/cap",
  "starkware-libs/cairo",
  "starkware-libs/cairo-lang",
  "0xproject/openzkp",
  "lambdaclass/lambdaworks",
  "lambdaclass/merkle_patricia_tree",
  "lambdaclass/stark101-rs",
  "espressosystems/jellyfish",
  "scrypt-inc/awesome-zero-knowledge-proofs",
  "andrewmilson/sandstorm",
  "baro77/zkbasicscs",
  "quillhash/zero-knowledge-mastery",
  "delendum-xyz/zk-knowledge",
  "paulrberg/awesome-zkp-starter-pack",
  "zpokenweb3/zk-light-client-implementation",
  "emilianobonassi/zkfhe",
  "rdi-berkeley/zkp-course-lecture3-code",
  "z-prize/2022-entries",
  "zkp-co-learning/zkp-co-learn",
  "risc0/risc0",
  "cryptidtech/oberon",
  "tarassh/zksnark-under-the-hood",
  "uncomputable/zkp-workshop",
  "zk-garage/plonk",
  "ventali/awesome-zk",
  "luozhuzhang/awesome-zkevm",
  "0xjuancito/awesome-zksync",
  "aleohq/snarkvm",
  "sec-bit/learning-zkp",
  "elibensasson/libstark",
  "noir-lang/noir",
  "aleohq/leo",
  "enricobottazzi/zkverse",
  "amirgamil/zk-crush",
  "xlab-si/emmy",
  "scipr-lab/dizk",
  "sunscreen-tech/sunscreen",
  "ingonyama-zk/icicle",
  "dr-orlovsky/library",
  "qed-it/zkinterface",
  "openzklib/openzl",
  "trailofbits/zkdocs",
  "delendum-xyz/zk-benchmarking",
  "vacp2p/zerokit",
  "zengo-x/zk-paillier",
  "thor314/pazk",
  "arkworks-rs/algebra",
  "arkworks-rs/poly-commit",
  "arkworks-rs/crypto-primitives",
  "arkworks-rs/groth16",
  "arkworks-rs/curves",
  "arkworks-rs/marlin",
  "arkworks-rs/r1cs-std",
  "hoprnet/hoprnet",
  "web3privacy/web3privacy",
  "ferencberes/ethereum-privacy",
  "near/borsh-rs",
  "weijiekoh/perpetualpowersoftau",
  "privacy-scaling-explorations/p0tion",
  "privacy-scaling-explorations/rln",
  "zeroknowledgefm/zeroknowledgebasics",
  "zeroknowledgefm/zksnarks",
  "zeroknowledgefm/starks",
  "waku-org/nwaku",
  "waku-org/go-waku",
  "ethresearch",
]);

export const zcash = new Set([
  "assert-rs/assert_cmd",
  "rustcrypto/elliptic-curves",
  "murarth/assert_matches",
  "debris/base58",
  "marshallpierce/rust-base64",
  "rust-bitcoin/rust-bech32",
  "billyrieger/bimap-rs/",
  "contain-rs/bit-set",
  "nervosnetwork/blake2b-rs/",
  "magiclen/byte-unit",
  "burntsushi/byteorder",
  "chronotope/chrono",
  "yalter/circular-queue",
  "clap-rs/clap",
  "marmeladema/clru-rs",
  "eyre-rs/color-eyre",
  "dzenanjupic/concat-idents",
  "mehcode/config-rs",
  "ia0/data-encoding",
  "jpopesculian/derivation-path",
  "mcarton/rust-derivative",
  "dirs-dev/directories-rs",
  "penumbra-zone/ed25519-consensus",
  "crate-ci/escargot",
  "rust-ethereum/ethabi",
  "gakonst/ethers-rs",
  "zhiburt/expectrl",
  "eyre-rs/eyre",
  "yoshuawuyts/fd-lock",
  "cobalt-org/cobalt.rs",
  "rust-lang/flate2-rs",
  "webdesus/fs_extra",
  "rust-lang/futures-rs",
  "rust-lang/git2-rs",
  "rust-itertools/itertools",
  "rust-lang-nursery/lazy-static.rs",
  "rust-lang/libc",
  "nagisa/rust_libloading/",
  "althea-net/num256_rs",
  "seanmonstar/num_cpus",
  "rust-num/num-derive",
  "rust-num/num-rational",
  "rust-num/num-traits",
  "matklad/once_cell",
  "orion-rs/orion",
  "dtolnay/paste",
  "rust-pretty-assertions/rust-pretty-assertions",
  "paritytech/parity-common",
  "proptest-rs/proptest",
  "tokio-rs/prost",
  "rust-random/rand",
  "rayon-rs/rayon",
  "rust-lang/regex",
  "seanmonstar/reqwest",
  "nugine/rlimit/",
  "rust-rocksdb/rust-rocksdb",
  "conradkleinespel/rpassword",
  "serde-rs/serde",
  "vorner/signal-hook",
  "guillaumegomez/sysinfo",
  "alexcrichton/tar-rs",
  "stebalien/tempfile",
  "d-e-s-o/test-log",
  "maciejhirsz/tiny-bip39/",
  "maciejhirsz/tiny-hderive",
  "dtolnay/thiserror",
  "tokio-rs/tokio",
  "toml-rs/toml",
  "hyperium/tonic",
  "tower-rs/tower",
  "tokio-rs/tracing",
  "bytecodealliance/wasm-tools",
  "retep998/winapi-rs",
  "sergiobenitez/yansi",
  "rustcrypto/utils/",
  "zcash/librustzcash",
  "zcash/sapling-security-analysis",
  "zcash/zcash",
  "zcash/halo2",
  "zcash/zips",
  "zcash/mpc",
  "zcash/pasta_curves",
  "zcash/orchard",
  "zcashfoundation/frost",
  "zcashfoundation/zecwallet",
  "zcashfoundation/powersoftau-attestations",
  "zcashfoundation/zebra",
  "paritytech/parity-zcash",
  "filosottile/zcash-mini",
  "str4d/zcash-pow",
  "bscrk/zecproxy",
  "adityapk00/zecwallet-lite",
  "howardwu/wagyu",
  "adityapk00/zecpaperwallet",
  "zcashfoundation/parity-zcash",
  "consensys/project-alchemy",
  "zechub/zechub",
  "zondax/ledger-zcash",
  "manganese/zcash-empirical-analysis",
  "plutomonkey/zcash-vanity",
  "nighthawk-apps/zcash-explorer",
  "nighthawk-apps/nighthawk-wallet-android",
  "mikerah/awesome-privacy-on-blockchains",
  "filosottile/powersoftau",
  "plutomonkey/zcash-sprout-verifier",
  "consensys/zslbox",
  "ipfs/go-ipld-zcash",
  "hhanh00/zwallet",
  "free2z/zuu",
]);

export type GithubEligibility = "interchain" | "zkp" | "zcash";

const identityMap: Record<GithubEligibility, GithubEligibility> = {
  interchain: "interchain",
  zkp: "zkp",
  zcash: "zcash",
};

export const mapEligibility = (
  eligibility: string,
  map: Record<GithubEligibility, string> = identityMap
): string => {
  const el = eligibility.toLowerCase();

  return interchain.has(el)
    ? map.interchain
    : zkp.has(el)
    ? map.zkp
    : zcash.has(el)
    ? map.zcash
    : "";
};
